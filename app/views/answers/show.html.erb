<div class="container-fluid">
  <div class="row">
    <div class="col-md-12">
      <h1>問<%= @answer.order %>/96</h1>
    </div>
  </div>

  <div class="row">
    <div class="col-md-12">
      <div id="webglcontainer1"></div>
      <div id="gesture_count1" class="text-muted">
        Gesture Time: 0
      </div>
    </div>
  </div>

  <div class="row">
    <%= form_for(@answer) do |f| %>
      <div class="col-md-4">
        <h3>#1 アンケート</h3>
        <ul class="list-group">
          <div class="question">
            1. 自然な動作に見えましたか？
          </div>
          <div class="likert text-center">
            <div class="ends" style="display:inline">全くそう思わない</div>
            <%= f.radio_button :eval1, '1' %>
            <%= f.radio_button :eval1, '2' %>
            <%= f.radio_button :eval1, '3' %>
            <%= f.radio_button :eval1, '4' %>
            <%= f.radio_button :eval1, '5' %>
            <%= f.radio_button :eval1, '6' %>
            <%= f.radio_button :eval1, '7' %>
            <div class="ends" style="display:inline">とてもそう思う</div>
          </div>
        </ul>
        <ul class="list-group">
          <div class="question">
            2. 滑らかな動作に見えましたか？
          </div>
          <div class="likert text-center">
            <div class="ends" style="display:inline">全くそう思わない</div>
            <%= f.radio_button :eval2, '1' %>
            <%= f.radio_button :eval2, '2' %>
            <%= f.radio_button :eval2, '3' %>
            <%= f.radio_button :eval2, '4' %>
            <%= f.radio_button :eval2, '5' %>
            <%= f.radio_button :eval2, '6' %>
            <%= f.radio_button :eval2, '7' %>
            <div class="ends" style="display:inline">とてもそう思う</div>
          </div>
        </ul>
        <ul class="list-group">
          <div class="question">
            3. 違和感のない動作に見えましたか？
          </div>
          <div class="likert text-center">
            <div class="ends" style="display:inline">全くそう思わない</div>
            <%= f.radio_button :eval3, '1' %>
            <%= f.radio_button :eval3, '2' %>
            <%= f.radio_button :eval3, '3' %>
            <%= f.radio_button :eval3, '4' %>
            <%= f.radio_button :eval3, '5' %>
            <%= f.radio_button :eval3, '6' %>
            <%= f.radio_button :eval3, '7' %>
            <div class="ends" style="display:inline">とてもそう思う</div>
          </div>
        </ul>
      </div>
    </div>
    <br />
    <%= f.submit "すべて送信して次へ" %>
  <% end%>
</div>


<script>

  // containers 
  container1 = document.getElementById('webglcontainer1');

  // variables for threejs
  let clock = new THREE.Clock();
  let camera1, scene1, renderer1;
  let mixer1, skeletonHelper1;
  let width = container1.clientWidth;
  let height = 700;
  let loader1 = new THREE.BVHLoader();
  let gesture_count1 = document.getElementById('gesture_count1');

  // variables for file handling
  let file_number = <%= @answer.motion_id %>;
  let gesture_file_1 = "/data/predicted/kinect_" + file_number + ".csv";


  // main procedure
  init();

  function play() {
    scene1 = new THREE.Scene();
    animate();
    load();
  }


  // functions
  function init() {
    camera1 = new THREE.PerspectiveCamera( 60, width / height, 1, 1000 );
    camera1.position.set( 0, 100, 50 );
    camera1.lookAt(new THREE.Vector3(0, 80, 0));
    scene1 = new THREE.Scene();
    //scene.add( new THREE.GridHelper( 200, 10 ) );
    // renderer
    renderer1 = new THREE.WebGLRenderer( { antialias: true } );
    renderer1.setClearColor( 0xeeeeee );
    renderer1.setPixelRatio( window.devicePixelRatio );
    renderer1.setSize( width, height );
    container1.appendChild(renderer1.domElement);
    renderer1.render( scene1, camera1 );
  }

  function animate() {
    requestAnimationFrame( animate );

    // var delta = clock.getDelta();
    // if ( mixer1 ) {
    //   if ( mixer1.time > mixer1._actions[0].time ){
    //     // nothing
    //   } else {
    //     mixer1.update( delta );
    //     gesture_count1.textContent = "Gesture Time: " + mixer1.time;
    //   }
    // }

    renderer1.render( scene1, camera1 );
  }

  function load() {
    // first bvh
    loader1.load( gesture_file_1, function( result ) {
      // mixer1 = new THREE.AnimationMixer( skeletonHelper1 );
      // mixer1.clipAction( result.clip ).setEffectiveWeight( 1.0 ).play();
                // play audio
      // let audio_control = document.getElementById('audio_control');
      // audio = new Audio( audio_file );
      // audio.play();

    });
  }

</script>

