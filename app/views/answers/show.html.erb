<div class="container-fluid">
  <div class="row">
    <div class="col-md-12">
      <h1>Exp.</h1>

      <form class="row">
        <div class="col-md-12">
          <button type="button" class="btn btn-primary btn-block" onclick="play()">Start</button>
          <p class=""text-muted>もう一度再生する場合は動作がとまってから、このボタンを再度おしてください。</p>
        </div>
      </form>
    </div>
  </div>

  <div class="row">
    <div class="col-md-4">
      <h3>#1</h3>
      <div id="webglcontainer1"></div>
      <div id="gesture_count1" class="text-muted">
        Gesture Time: 0
      </div>
    </div>
    <div class="col-md-4">
      <h3>#2</h3>
      <div id="webglcontainer2"></div>
      <div id="gesture_count2" class="text-muted">
        Gesture Time: 0
      </div>
    </div>
    <div class="col-md-4">
      <h3>#3</h3>
      <div id="webglcontainer3"></div>
      <div id="gesture_count3" class="text-muted">
        Gesture Time: 0
      </div>
    </div>
  </div>

  <div class="row">
    <%= form_for(@answer) do |f| %>
      <div class="col-md-4">
        <h3>#1 アンケート</h3>
        <ul class="list-group">
          <div class="question">
            1. ジェスチャは自然だと思いますか？
          </div>
          <div class="likert text-center">
            <div class="ends" style="display:inline">とても思う</div>
            <%= f.radio_button :eval1_1, '7' %>
            <%= f.radio_button :eval1_1, '6' %>
            <%= f.radio_button :eval1_1, '5' %>
            <%= f.radio_button :eval1_1, '4' %>
            <%= f.radio_button :eval1_1, '3' %>
            <%= f.radio_button :eval1_1, '2' %>
            <%= f.radio_button :eval1_1, '1' %>
            <div class="ends" style="display:inline">全く思わない</div>
          </div>
        </ul>
        <ul class="list-group">
          <div class="question">
            2. ジェスチャのタイミングは音声と合っていると思いますか？
          </div>
          <div class="likert text-center">
            <div class="ends" style="display:inline">とても思う</div>
            <%= f.radio_button :eval1_2, '7' %>
            <%= f.radio_button :eval1_2, '6' %>
            <%= f.radio_button :eval1_2, '5' %>
            <%= f.radio_button :eval1_2, '4' %>
            <%= f.radio_button :eval1_2, '3' %>
            <%= f.radio_button :eval1_2, '2' %>
            <%= f.radio_button :eval1_2, '1' %>
            <div class="ends" style="display:inline">全く思わない</div>
          </div>
        </ul>
        <ul class="list-group">
          <div class="question">
            3. ジェスチャは発話の内容と合っていると思いますか？
          </div>
          <div class="likert text-center">
            <div class="ends" style="display:inline">とても思う</div>
            <%= f.radio_button :eval1_3, '7' %>
            <%= f.radio_button :eval1_3, '6' %>
            <%= f.radio_button :eval1_3, '5' %>
            <%= f.radio_button :eval1_3, '4' %>
            <%= f.radio_button :eval1_3, '3' %>
            <%= f.radio_button :eval1_3, '2' %>
            <%= f.radio_button :eval1_3, '1' %>
            <div class="ends" style="display:inline">全く思わない</div>
          </div>
        </ul>
      </div>
      <div class="col-md-4">
        <h3>#2 アンケート</h3>
        <ul class="list-group">
          <div class="question">
            1. ジェスチャは自然だと思いますか？
          </div>
          <div class="likert text-center">
            <div class="ends" style="display:inline">とても思う</div>
            <%= f.radio_button :eval2_1, '7' %>
            <%= f.radio_button :eval2_1, '6' %>
            <%= f.radio_button :eval2_1, '5' %>
            <%= f.radio_button :eval2_1, '4' %>
            <%= f.radio_button :eval2_1, '3' %>
            <%= f.radio_button :eval2_1, '2' %>
            <%= f.radio_button :eval2_1, '1' %>
            <div class="ends" style="display:inline">全く思わない</div>
          </div>
        </ul>
        <ul class="list-group">
          <div class="question">
            2. ジェスチャのタイミングは音声と合っていると思いますか？
          </div>
          <div class="likert text-center">
            <div class="ends" style="display:inline">とても思う</div>
            <%= f.radio_button :eval2_2, '7' %>
            <%= f.radio_button :eval2_2, '6' %>
            <%= f.radio_button :eval2_2, '5' %>
            <%= f.radio_button :eval2_2, '4' %>
            <%= f.radio_button :eval2_2, '3' %>
            <%= f.radio_button :eval2_2, '2' %>
            <%= f.radio_button :eval2_2, '1' %>
            <div class="ends" style="display:inline">全く思わない</div>
          </div>
        </ul>
        <ul class="list-group">
          <div class="question">
            3. ジェスチャは発話の内容と合っていると思いますか？
          </div>
          <div class="likert text-center">
            <div class="ends" style="display:inline">とても思う</div>
            <%= f.radio_button :eval2_3, '7' %>
            <%= f.radio_button :eval2_3, '6' %>
            <%= f.radio_button :eval2_3, '5' %>
            <%= f.radio_button :eval2_3, '4' %>
            <%= f.radio_button :eval2_3, '3' %>
            <%= f.radio_button :eval2_3, '2' %>
            <%= f.radio_button :eval2_3, '1' %>
            <div class="ends" style="display:inline">全く思わない</div>
          </div>
        </ul>
      </div>
      <div class="col-md-4">
        <h3>#3 アンケート</h3>
        <ul class="list-group">
          <div class="question">
            1. ジェスチャは自然だと思いますか？
          </div>
          <div class="likert text-center">
            <div class="ends" style="display:inline">とても思う</div>
            <%= f.radio_button :eval3_1, '7' %>
            <%= f.radio_button :eval3_1, '6' %>
            <%= f.radio_button :eval3_1, '5' %>
            <%= f.radio_button :eval3_1, '4' %>
            <%= f.radio_button :eval3_1, '3' %>
            <%= f.radio_button :eval3_1, '2' %>
            <%= f.radio_button :eval3_1, '1' %>
            <div class="ends" style="display:inline">全く思わない</div>
          </div>
        </ul>
        <ul class="list-group">
          <div class="question">
            2. ジェスチャのタイミングは音声と合っていると思いますか？
          </div>
          <div class="likert text-center">
            <div class="ends" style="display:inline">とても思う</div>
            <%= f.radio_button :eval3_2, '7' %>
            <%= f.radio_button :eval3_2, '6' %>
            <%= f.radio_button :eval3_2, '5' %>
            <%= f.radio_button :eval3_2, '4' %>
            <%= f.radio_button :eval3_2, '3' %>
            <%= f.radio_button :eval3_2, '2' %>
            <%= f.radio_button :eval3_2, '1' %>
            <div class="ends" style="display:inline">全く思わない</div>
          </div>
        </ul>
        <ul class="list-group">
          <div class="question">
            3. ジェスチャは発話の内容と合っていると思いますか？
          </div>
          <div class="likert text-center">
            <div class="ends" style="display:inline">とても思う</div>
            <%= f.radio_button :eval3_3, '7' %>
            <%= f.radio_button :eval3_3, '6' %>
            <%= f.radio_button :eval3_3, '5' %>
            <%= f.radio_button :eval3_3, '4' %>
            <%= f.radio_button :eval3_3, '3' %>
            <%= f.radio_button :eval3_3, '2' %>
            <%= f.radio_button :eval3_3, '1' %>
            <div class="ends" style="display:inline">全く思わない</div>
          </div>
        </ul>
      </div>
    </div>
    <br />
    <%= f.submit "すべて送信して次へ" %>
  <% end%>
</div>


<script>

  // containers 
  container1 = document.getElementById('webglcontainer1');
  container2 = document.getElementById('webglcontainer2');
  container3 = document.getElementById('webglcontainer3');

  // variables for threejs
  let clock = new THREE.Clock();
  let camera1, camera2, camera3, scene1, scene2, scene3, renderer1, renderer2, renderer3;
  let mixer1, mixer2, mixer3, skeletonHelper1, skeletonHelper2, skeletonHelper3;
  let width = container1.clientWidth;
  let height = 700;
  let loader1 = new THREE.BVHLoader();
  let loader2 = new THREE.BVHLoader();
  let loader3 = new THREE.BVHLoader();
  let gesture_count1 = document.getElementById('gesture_count1');
  let gesture_count2 = document.getElementById('gesture_count2');
  let gesture_count3 = document.getElementById('gesture_count3');

  // variables for file handling
  let file_number = <%= @answer.audio_id %>;
  let original_gesture_file = "/data/original/gesture" + file_number + "_rot.bvh";
  let predicted_gesture_file = "/data/predicted/gesture" + file_number + "_rot.bvh";
  let mismatched_gesture_file = "/data/mismatched/gesture" + file_number + "_rot.bvh";
  let audio_file = "/data/audios/audio" + file_number + ".wav";


  // main procedure
  init();

  function play() {
    scene1 = new THREE.Scene();
    scene2 = new THREE.Scene();
    scene3 = new THREE.Scene();
    animate();
    load();
  }


  // functions
  function init() {
    camera1 = new THREE.PerspectiveCamera( 60, width / height, 1, 1000 );
    camera2 = new THREE.PerspectiveCamera( 60, width / height, 1, 1000 );
    camera3 = new THREE.PerspectiveCamera( 60, width / height, 1, 1000 );
    camera1.position.set( 0, 100, 50 );
    camera2.position.set( 0, 100, 50 );
    camera3.position.set( 0, 100, 50 );
    camera1.lookAt(new THREE.Vector3(0, 80, 0));
    camera2.lookAt(new THREE.Vector3(0, 80, 0));
    camera3.lookAt(new THREE.Vector3(0, 80, 0));
    scene1 = new THREE.Scene();
    scene2 = new THREE.Scene();
    scene3 = new THREE.Scene();
    //scene.add( new THREE.GridHelper( 200, 10 ) );
    // renderer
    renderer1 = new THREE.WebGLRenderer( { antialias: true } );
    renderer2 = new THREE.WebGLRenderer( { antialias: true } );
    renderer3 = new THREE.WebGLRenderer( { antialias: true } );
    renderer1.setClearColor( 0xeeeeee );
    renderer2.setClearColor( 0xeeeeee );
    renderer3.setClearColor( 0xeeeeee );
    renderer1.setPixelRatio( window.devicePixelRatio );
    renderer2.setPixelRatio( window.devicePixelRatio );
    renderer3.setPixelRatio( window.devicePixelRatio );
    renderer1.setSize( width, height );
    renderer2.setSize( width, height );
    renderer3.setSize( width, height );
    container1.appendChild(renderer1.domElement);
    container2.appendChild(renderer2.domElement);
    container3.appendChild(renderer3.domElement);
    renderer1.render( scene1, camera1 );
    renderer2.render( scene2, camera2 );
    renderer3.render( scene3, camera3 );
  }

  function animate() {
    requestAnimationFrame( animate );

    var delta = clock.getDelta();
    if ( mixer1 && mixer2 && mixer3 ) {
      if ( mixer1.time > mixer1._actions[0].time ){
        // nothing
      } else {
        mixer1.update( delta );
        mixer2.update( delta );
        mixer3.update( delta );
        gesture_count1.textContent = "Gesture Time: " + mixer1.time;
        gesture_count2.textContent = "Gesture Time: " + mixer2.time;
        gesture_count3.textContent = "Gesture Time: " + mixer3.time;
      }
    }

    renderer1.render( scene1, camera1 );
    renderer2.render( scene2, camera2 );
    renderer3.render( scene3, camera3 );
  }

  function load() {
    // first bvh
    loader1.load( original_gesture_file, function( result ) {
      skeletonHelper1 = new THREE.SkeletonHelper( result.skeleton.bones[ 0 ] );
      skeletonHelper1.skeleton = result.skeleton; // allow animation mixer to bind to SkeletonHelper directly
      var boneContainer = new THREE.Group();
      boneContainer.add( result.skeleton.bones[ 0 ] );
      scene1.add( skeletonHelper1 );
      scene1.add( boneContainer );
      mixer1 = new THREE.AnimationMixer( skeletonHelper1 );
      mixer1.clipAction( result.clip ).setEffectiveWeight( 1.0 ).play();

      // second bvh
      loader2.load( predicted_gesture_file, function( result ) {
        skeletonHelper2 = new THREE.SkeletonHelper( result.skeleton.bones[ 0 ] );
        skeletonHelper2.skeleton = result.skeleton; // allow animation mixer to bind to SkeletonHelper directly
        var boneContainer = new THREE.Group();
        boneContainer.add( result.skeleton.bones[ 0 ] );
        scene2.add( skeletonHelper2 );
        scene2.add( boneContainer );
        mixer2 = new THREE.AnimationMixer( skeletonHelper2 );
        mixer2.clipAction( result.clip ).setEffectiveWeight( 1.0 ).play();

        // third bvh
        loader3.load( mismatched_gesture_file, function( result ) {
          skeletonHelper3 = new THREE.SkeletonHelper( result.skeleton.bones[ 0 ] );
          skeletonHelper3.skeleton = result.skeleton; // allow animation mixer to bind to SkeletonHelper directly
          var boneContainer = new THREE.Group();
          boneContainer.add( result.skeleton.bones[ 0 ] );
          scene3.add( skeletonHelper3 );
          scene3.add( boneContainer );
          mixer3 = new THREE.AnimationMixer( skeletonHelper3 );
          mixer3.clipAction( result.clip ).setEffectiveWeight( 1.0 ).play();

          // play audio
          let audio_control = document.getElementById('audio_control');
          audio = new Audio( audio_file );
          audio.play();

        });
      });
    });
  }

</script>

